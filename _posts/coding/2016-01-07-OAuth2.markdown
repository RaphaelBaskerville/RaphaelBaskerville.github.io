---
layout: post
title:  "How to retrieve any users last tweet using the Twitter API"
date:   2016-1-10 00:50:32 -0800
categories: coding
---

# Using Express to get tweets from any user.

## OAuth2 Application-only token.

  In order to make requests to Twitter you have to authenticate yourself.   In this example, instead of authenticating an actual user, we authenticate the application itself.

   First, you need to register your app with twitter to aquire a consumer key and secret at [apps.twitter.com][twitter-apps]. 

   Then we format the both the together key and the secret into an encoded buffer object that we can send to twitter. 

{% highlight ruby %}
//////////////////////////////////////////////////////////////////
//Set up and send a request for our application-only oAuth token.
///////////////////////////////////////////////////////////////////

// create a variable to hold our token.
var twitterAppToken;

// store our twitter key and secret
var consumerKey = 'xxxxxxxxxxxxxxx';
var consumerSecret = 'xxxxxxxxxxxxxxxxxx';

// concat the key and secret seperated by a colon.
var bearerTokenCred = consumerKey + ':' + consumerSecret;

// pass the key string into Buffer constructor to create a buffer obj.
var bufferedToken = new Buffer(bearerTokenCred);

// encode the buffer object in base64
var encodedAndBufferedToken = bufferedToken.toString('base64');
{% endhighlight %}
  
  In the next section we set the request object up. 

{% highlight ruby %}

// set up options, you need quotes around keys with hyphens
var options = {
  url: 'https://api.twitter.com/oauth2/token',
  body: 'grant_type=client_credentials',
  method: 'POST',
  'Accept-Encoding': 'gzip',
  headers: {
    Authorization: 'Basic ' + encodedAndBufferedToken,
    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
  },
};

{% endhighlight %}
  
  Finally we make the request.

{% highlight ruby %}

// request and save an application-only token from twitter
request(options, function (err, response, body) {
  if (err) {
    console.log(err);
  }

  twitterAppToken = JSON.parse(body);
});

{% endhighlight %}
  
  Awesome!! You have a token.  Lets use it to get some data back from twitter. In this example we are just building the backend route to grab a users last tweet. To test it you need to make a GET request with a wusers handle as a param to:
  
    /tweets/:TWITTERHANDLE 

{% highlight ruby %}

///////////////////////////////
// get tweets
///////////////////////////////

// here we set up the get handler that will send a request for the users tweet and then send it to our client-side app.
// route has one param, a twitter users handle.
.get('/tweets/:handle', function (req, outerResponse, next) {
  // set options
  var options = {
    // append the user's handle to the url
    url: 'https://api.twitter.com/1.1/statuses/user_timeline.json?count=1&screen_name=' + req.params.handle,
    method: 'GET',
    headers: {
      // append the access token to the string Bearer with a space.
      Authorization: 'Bearer ' + twitterAppToken.access_token,
    },
  };

  // Send a get request to twitter, notice that the response that we send in the callback is the response from the outer-function passed in through closure.
  request(options, function (err, innerResponse, body) {
    console.log(JSON.parse(body)[0].text);
    outerResponse.status(200).send(JSON.parse(body)[0]);
  });
});


{% endhighlight %}




[twitter-apps]: https://apps.twitter.com/

